Part One: Solidify Terminology
In your own terms, define the following terms:

What is HTTP?
HTTP stands for hyper text transfer protocol, it is a protocol for computers to make requests to and receive responses from servers

What is a URL?
Uniform Resource Locator, a human readable reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it

What is DNS?
Domain Name System, a system that matches human readable web addresses to their respective IP addresses

What is a query string?
for example ?key=value&key2=value2  query strings allow for key value pairs to be included at the end of a URL to allow a resource to respond more specifically, common use case is searching

What are two HTTP verbs and how are they different?
GET POST, GET retrieves data and POST sends data

What is an HTTP request?
version, headers, body 

What is an HTTP response?
version, headers, body, status 

What is an HTTP header? Give a couple examples of request and response headers you have seen.
HTTP header is a part of a HTTP request and response, some examples are Accept-Language: fr, Accept: application/json

What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?
An HTTP request is sent to GET that resource. If there are more resources on the page.html, more GET requests are sent until all resources are loaded


Part Two: Practice Tools
Using curl, make a GET request to the icanhazdadjoke.com API to find all jokes involving the word “pirate”
curl https://icanhazdadjoke.com/search?term=pirate

Use dig to find what the IP address is for icanhazdadjoke.com
dig https://icanhazdadjoke.com
>SERVER: 127.0.0.53#53(127.0.0.53)

Make a simple web page and serve it using python3 -m http.server. Visit the page in a browser.
python3 -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
127.0.0.1 - - [25/Feb/2021 17:34:51] "GET / HTTP/1.1" 304 -


Part Three: Explore Dev Tools
Build a very simple HTML form that uses the GET method (it can use the same page URL for the action) when the form is submitted.
done.. in form/index.html

Add a field or two to the form and, after submitting it, explore in Chrome Developer tools how you can view the request and response headers.
status 304.. explored

Edit the page to change the form type to POST, refresh in the browser and re-submit. Do you still see the field in the query string? Explore in Chrome how you can view the request and response headers, as well as the form data.
the query string is no longer there, Status code 501: unsupported method POST



Part Four: Explore the URL API
At times, it’s useful for your JavaScript to look at the URL of the browser window and change how the script works depending on parts of that (particularly the query string).

Read about the URL API

Try some of the code examples in the Chrome Console so that you can get comfortable with the basic methods and properties for instances of the URL class.
done

